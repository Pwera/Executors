language: cpp

sudo: true
cache: ccache

compiler: clang

# gcc 4.9 default
addons: &addons
  apt:
    packages: &packages
      - g++-4.9
      - clang-format-3.7
      - python-pip
      - libgtest-dev
    sources: &sources
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.5
      - llvm-toolchain-precise-3.6
      - llvm-toolchain-precise-3.7
      - llvm-toolchain-precise-3.8

env:
  global:
    - BUILD_CPR_TESTS=ON
    - GTEST_SHUFFLE=1
    - INSECURE_CURL=ON
    - USE_SYSTEM_CURL=ON
  matrix:
    - COMPILER=g++-4.9 CCOMPILER=gcc-4.9 GENERATE_COVERAGE=ON FORMAT_CHECK=ON

matrix:
  include:
    # gcc 5
    - env: COMPILER=g++-5 CCOMPILER=gcc-5
      addons:
        apt:
          packages:
          - g++-5
          - libgtest-dev
          sources: *sources

    # Clang 3.5
    - env: COMPILER=clang++-3.5 CCOMPILER=clang-3.5
      addons:
        apt:
          packages: clang-3.5
          sources: *sources

    # Clang 3.7
    - env: COMPILER=clang++-3.7 CCOMPILER=clang-3.7
      addons:
        apt:
          packages: clang-3.7
          sources: *sources

    # Clang 3.8
    - env: COMPILER=clang++-3.8 CCOMPILER=clang-3.8
      addons:
        apt:
          packages: clang-3.8
          sources: *sources

    # Xcode 6.4
    - os: osx
      env: COMPILER=clang++ CCOMPILER=clang
      osx_image: xcode6.4

    # Xcode 7
    - os: osx
      env: COMPILER=clang++ CCOMPILER=clang BREW_CMAKE=ON
      osx_image: xcode7
  allow_failures:
    - env: COMPILER=clang++ CCOMPILER=clang
    - env: COMPILER=clang++ CCOMPILER=clang BREW_CMAKE=ON

install:
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then pip install --user git+git://github.com/eddyxu/cpp-coveralls.git; fi

before_script:
  - export CXX=$COMPILER CC=$CCOMPILER
  - cmake --version
  #- sudo apt-get install build-essential
  - sudo apt-get install libgtest-dev
  - wget http://www.cmake.org/files/v3.2/cmake-3.2.2.tar.gz
  - tar xf cmake-3.2.2.tar.gz
  - cd cmake-3.2.2
  - ./configure
  - make
  - sudo apt-get remove cmake
  - sudo make install
  - ls
  - cd bin
  - ls
  - sudo cp cmake /usr/bin
  - cmake --version
  - cd ..
  - ls 
  - cd ..
  - ls 
  - mkdir build
  - cd build
  - cmake ..

script:
  - make -j2

#after_success:
#  - if [ "$GENERATE_COVERAGE" == "ON" ]; then coveralls -i 'cpr' -i 'include' -e '../include/cpr.h' --root '../' --verbose --gcov-options '\-lp' --gcov 'gcov-4.9'; fi

#after_script:
#  - if [ "$FORMAT_CHECK" == "ON" ]; then cd .. && ./format-check.sh; fi

